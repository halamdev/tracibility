import React from 'react';
import { ProductForm } from '../components';
import { toast } from 'react-toastify';
import { useContractContext } from '../contexts/ContractContext';

export const CreatePage: React.FC = () => {
  const {
    walletState,
    loading,
    error,
    createProduct,
    clearError,
  } = useContractContext();

  // Redirect if not authorized
  if (!walletState.isConnected) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-2xl">
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6 text-center">
          <h2 className="text-xl font-semibold text-yellow-800 mb-2">
            C·∫ßn k·∫øt n·ªëi v√≠
          </h2>
          <p className="text-yellow-700">
            Vui l√≤ng k·∫øt n·ªëi v√≠ MetaMask ƒë·ªÉ t·∫°o s·∫£n ph·∫©m m·ªõi
          </p>
        </div>
      </div>
    );
  }

  if (!walletState.isAuthorized) {
    return (
      <div className="container mx-auto px-4 py-8 max-w-2xl">
        <div className="bg-red-50 border border-red-200 rounded-lg p-6 text-center">
          <h2 className="text-xl font-semibold text-red-800 mb-2">
            Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p
          </h2>
          <p className="text-red-700">
            B·∫°n c·∫ßn ƒë∆∞·ª£c c·∫•p quy·ªÅn t·ª´ ch·ªß h·ª£p ƒë·ªìng ƒë·ªÉ c√≥ th·ªÉ t·∫°o s·∫£n ph·∫©m m·ªõi
          </p>
        </div>
      </div>
    );
  }

  const handleCreateProduct = async (productId: string, name: string, ipfsHash: string) => {
    const result = await createProduct(productId, name, ipfsHash);
    if (result) {
      toast.success('S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!');
    }
  };

  return (
    <div className="container mx-auto px-4 py-8 max-w-2xl">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">
          T·∫°o s·∫£n ph·∫©m m·ªõi
        </h1>
        <p className="text-gray-600">
          ƒêƒÉng k√Ω s·∫£n ph·∫©m m·ªõi v√†o h·ªá th·ªëng truy xu·∫•t ngu·ªìn g·ªëc
        </p>
      </div>

      {error && toast.error(error, { onClose: clearError })}

      {/* Product Form */}
      <ProductForm
        onSubmit={handleCreateProduct}
        loading={loading}
        isAuthorized={walletState.isAuthorized}
      />

      {/* Tips */}
      <div className="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-blue-800 mb-3">
          üí° M·∫πo s·ª≠ d·ª•ng
        </h3>
        <ul className="space-y-2 text-blue-700 text-sm">
          <li>‚Ä¢ M√£ s·∫£n ph·∫©m ph·∫£i l√† duy nh·∫•t trong h·ªá th·ªëng</li>
          <li>‚Ä¢ IPFS Hash n√™n ch·ª©a metadata, h√¨nh ·∫£nh v√† ch·ª©ng nh·∫≠n c·ªßa s·∫£n ph·∫©m</li>
          <li>‚Ä¢ Sau khi t·∫°o, b·∫°n c√≥ th·ªÉ th√™m c√°c b∆∞·ªõc truy xu·∫•t trong trang Tra c·ª©u</li>
          <li>‚Ä¢ T·∫•t c·∫£ th√¥ng tin s·∫Ω ƒë∆∞·ª£c l∆∞u tr·ªØ vƒ©nh vi·ªÖn tr√™n blockchain</li>
        </ul>
      </div>
    </div>
  );
};